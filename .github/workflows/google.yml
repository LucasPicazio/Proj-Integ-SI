on:
  push:
    branches:
      - master
 
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-psi	   # TODO: update to cluster name
  GKE_ZONE: us-east1-b	   # TODO: update to cluster zone
  DEPLOYMENT_NAME: gke-test # TODO: update to deployment name
  IMAGE: static-site
 
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
    
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11  
        
    - name: Checkout
      uses: actions/checkout@v2
 
    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}
        
    - name: Public IP
      id: ip
      uses: haythem/public-ip@v1.2
      
    - name: Setup Google Cloud SDK
      uses: mathrix-education/setup-gcloud@1.2.2
      with:
        service-account-key:  ${{ secrets.GKE_SA_KEY }}
        project: ${{ secrets.GKE_PROJECT }}

    - name: Set Ips
      run: gcloud sql instances patch postgre-psi --authorized-networks=${{ steps.ip.outputs.ipv4 }},189.120.79.60,34.73.241.32,35.185.59.139,104.196.12.141,201.68.207.176,187.38.232.140,201.26.155.25,200.171.47.6,200.161.102.129,35.237.152.39,35.185.59.139,35.243.161.61,34.75.212.245,35.190.167.205,34.75.149.158,201.81.27.28
 
    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |-
        gcloud --quiet auth configure-docker
      
    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}
    - name: pom  
      run: |-
         mvn -B package --file pom.xml

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
 
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
        
    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
 
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
        
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
    - name: Build and analyze
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

    - name: Set Ips remove
      run: gcloud sql instances patch postgre-psi --authorized-networks=189.120.79.60,34.73.241.32,35.185.59.139,104.196.12.141,201.68.207.176,187.38.232.140,201.26.155.25,200.171.47.6,200.161.102.129,35.237.152.39,35.185.59.139,35.243.161.61,34.75.212.245,35.190.167.205,34.75.149.158,201.81.27.28


